//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWPF.ServiceAirlines {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="ServiceModels")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Card {
            get {
                return this.CardField;
            }
            set {
                if ((object.ReferenceEquals(this.CardField, value) != true)) {
                    this.CardField = value;
                    this.RaisePropertyChanged("Card");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flight", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Flight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceAirlines.City EndCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlightNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumOfPlacesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceAirlines.City StartCityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFlight {
            get {
                return this.DateFlightField;
            }
            set {
                if ((this.DateFlightField.Equals(value) != true)) {
                    this.DateFlightField = value;
                    this.RaisePropertyChanged("DateFlight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceAirlines.City EndCity {
            get {
                return this.EndCityField;
            }
            set {
                if ((object.ReferenceEquals(this.EndCityField, value) != true)) {
                    this.EndCityField = value;
                    this.RaisePropertyChanged("EndCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlightNumber {
            get {
                return this.FlightNumberField;
            }
            set {
                if ((this.FlightNumberField.Equals(value) != true)) {
                    this.FlightNumberField = value;
                    this.RaisePropertyChanged("FlightNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumOfPlaces {
            get {
                return this.NumOfPlacesField;
            }
            set {
                if ((this.NumOfPlacesField.Equals(value) != true)) {
                    this.NumOfPlacesField = value;
                    this.RaisePropertyChanged("NumOfPlaces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceAirlines.City StartCity {
            get {
                return this.StartCityField;
            }
            set {
                if ((object.ReferenceEquals(this.StartCityField, value) != true)) {
                    this.StartCityField = value;
                    this.RaisePropertyChanged("StartCity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Server.Models")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceAirlines.Place PlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceAirlines.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceAirlines.Place Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceAirlines.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Place", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Place : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientWPF.ServiceAirlines.Flight FlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientWPF.ServiceAirlines.Flight Flight {
            get {
                return this.FlightField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightField, value) != true)) {
                    this.FlightField = value;
                    this.RaisePropertyChanged("Flight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaceNumber {
            get {
                return this.PlaceNumberField;
            }
            set {
                if ((this.PlaceNumberField.Equals(value) != true)) {
                    this.PlaceNumberField = value;
                    this.RaisePropertyChanged("PlaceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAirlines.IAirlinesTicketService")]
    public interface IAirlinesTicketService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/Autorization", ReplyAction="http://tempuri.org/IAirlinesTicketService/AutorizationResponse")]
        ClientWPF.ServiceAirlines.User Autorization(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/Autorization", ReplyAction="http://tempuri.org/IAirlinesTicketService/AutorizationResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.User> AutorizationAsync(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/Disconnect", ReplyAction="http://tempuri.org/IAirlinesTicketService/DisconnectResponse")]
        void Disconnect(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/Disconnect", ReplyAction="http://tempuri.org/IAirlinesTicketService/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/Registration", ReplyAction="http://tempuri.org/IAirlinesTicketService/RegistrationResponse")]
        string Registration(ClientWPF.ServiceAirlines.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/Registration", ReplyAction="http://tempuri.org/IAirlinesTicketService/RegistrationResponse")]
        System.Threading.Tasks.Task<string> RegistrationAsync(ClientWPF.ServiceAirlines.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/UpdateUserInformation", ReplyAction="http://tempuri.org/IAirlinesTicketService/UpdateUserInformationResponse")]
        string UpdateUserInformation(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/UpdateUserInformation", ReplyAction="http://tempuri.org/IAirlinesTicketService/UpdateUserInformationResponse")]
        System.Threading.Tasks.Task<string> UpdateUserInformationAsync(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetAllFlights", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetAllFlightsResponse")]
        ClientWPF.ServiceAirlines.Flight[] GetAllFlights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetAllFlights", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetAllFlightsResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Flight[]> GetAllFlightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetAllOrders", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetAllOrdersResponse")]
        ClientWPF.ServiceAirlines.Order[] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetAllOrders", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Order[]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetAllUsers", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetAllUsersResponse")]
        ClientWPF.ServiceAirlines.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetAllUsers", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/AddNewFlight", ReplyAction="http://tempuri.org/IAirlinesTicketService/AddNewFlightResponse")]
        string AddNewFlight(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/AddNewFlight", ReplyAction="http://tempuri.org/IAirlinesTicketService/AddNewFlightResponse")]
        System.Threading.Tasks.Task<string> AddNewFlightAsync(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/DeleteFlight", ReplyAction="http://tempuri.org/IAirlinesTicketService/DeleteFlightResponse")]
        ClientWPF.ServiceAirlines.Flight[] DeleteFlight(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/DeleteFlight", ReplyAction="http://tempuri.org/IAirlinesTicketService/DeleteFlightResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Flight[]> DeleteFlightAsync(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/UpdateFlight", ReplyAction="http://tempuri.org/IAirlinesTicketService/UpdateFlightResponse")]
        string UpdateFlight(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/UpdateFlight", ReplyAction="http://tempuri.org/IAirlinesTicketService/UpdateFlightResponse")]
        System.Threading.Tasks.Task<string> UpdateFlightAsync(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/DeleteUser", ReplyAction="http://tempuri.org/IAirlinesTicketService/DeleteUserResponse")]
        ClientWPF.ServiceAirlines.User[] DeleteUser(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/DeleteUser", ReplyAction="http://tempuri.org/IAirlinesTicketService/DeleteUserResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.User[]> DeleteUserAsync(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetAllCities", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetAllCitiesResponse")]
        ClientWPF.ServiceAirlines.City[] GetAllCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetAllCities", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetAllCitiesResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.City[]> GetAllCitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetFlights", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetFlightsResponse")]
        ClientWPF.ServiceAirlines.Flight[] GetFlights(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetFlights", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetFlightsResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Flight[]> GetFlightsAsync(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetPlaces", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetPlacesResponse")]
        ClientWPF.ServiceAirlines.Place[] GetPlaces(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetPlaces", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetPlacesResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Place[]> GetPlacesAsync(ClientWPF.ServiceAirlines.Flight flight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetUserReservation", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetUserReservationResponse")]
        ClientWPF.ServiceAirlines.Order[] GetUserReservation(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/GetUserReservation", ReplyAction="http://tempuri.org/IAirlinesTicketService/GetUserReservationResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Order[]> GetUserReservationAsync(ClientWPF.ServiceAirlines.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/CancelReservation", ReplyAction="http://tempuri.org/IAirlinesTicketService/CancelReservationResponse")]
        ClientWPF.ServiceAirlines.Order[] CancelReservation(ClientWPF.ServiceAirlines.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/CancelReservation", ReplyAction="http://tempuri.org/IAirlinesTicketService/CancelReservationResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Order[]> CancelReservationAsync(ClientWPF.ServiceAirlines.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/ReservePlace", ReplyAction="http://tempuri.org/IAirlinesTicketService/ReservePlaceResponse")]
        System.ValueTuple<ClientWPF.ServiceAirlines.Place[], string> ReservePlace(ClientWPF.ServiceAirlines.User user, ClientWPF.ServiceAirlines.Place place);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/ReservePlace", ReplyAction="http://tempuri.org/IAirlinesTicketService/ReservePlaceResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<ClientWPF.ServiceAirlines.Place[], string>> ReservePlaceAsync(ClientWPF.ServiceAirlines.User user, ClientWPF.ServiceAirlines.Place place);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/BuyTicket", ReplyAction="http://tempuri.org/IAirlinesTicketService/BuyTicketResponse")]
        ClientWPF.ServiceAirlines.Order[] BuyTicket(ClientWPF.ServiceAirlines.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirlinesTicketService/BuyTicket", ReplyAction="http://tempuri.org/IAirlinesTicketService/BuyTicketResponse")]
        System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Order[]> BuyTicketAsync(ClientWPF.ServiceAirlines.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAirlinesTicketServiceChannel : ClientWPF.ServiceAirlines.IAirlinesTicketService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AirlinesTicketServiceClient : System.ServiceModel.ClientBase<ClientWPF.ServiceAirlines.IAirlinesTicketService>, ClientWPF.ServiceAirlines.IAirlinesTicketService {
        
        public AirlinesTicketServiceClient() {
        }
        
        public AirlinesTicketServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AirlinesTicketServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AirlinesTicketServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AirlinesTicketServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientWPF.ServiceAirlines.User Autorization(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.Autorization(user);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.User> AutorizationAsync(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.AutorizationAsync(user);
        }
        
        public void Disconnect(ClientWPF.ServiceAirlines.User user) {
            base.Channel.Disconnect(user);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.DisconnectAsync(user);
        }
        
        public string Registration(ClientWPF.ServiceAirlines.User newUser) {
            return base.Channel.Registration(newUser);
        }
        
        public System.Threading.Tasks.Task<string> RegistrationAsync(ClientWPF.ServiceAirlines.User newUser) {
            return base.Channel.RegistrationAsync(newUser);
        }
        
        public string UpdateUserInformation(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.UpdateUserInformation(user);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserInformationAsync(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.UpdateUserInformationAsync(user);
        }
        
        public ClientWPF.ServiceAirlines.Flight[] GetAllFlights() {
            return base.Channel.GetAllFlights();
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Flight[]> GetAllFlightsAsync() {
            return base.Channel.GetAllFlightsAsync();
        }
        
        public ClientWPF.ServiceAirlines.Order[] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Order[]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public ClientWPF.ServiceAirlines.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public string AddNewFlight(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.AddNewFlight(flight);
        }
        
        public System.Threading.Tasks.Task<string> AddNewFlightAsync(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.AddNewFlightAsync(flight);
        }
        
        public ClientWPF.ServiceAirlines.Flight[] DeleteFlight(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.DeleteFlight(flight);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Flight[]> DeleteFlightAsync(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.DeleteFlightAsync(flight);
        }
        
        public string UpdateFlight(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.UpdateFlight(flight);
        }
        
        public System.Threading.Tasks.Task<string> UpdateFlightAsync(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.UpdateFlightAsync(flight);
        }
        
        public ClientWPF.ServiceAirlines.User[] DeleteUser(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.User[]> DeleteUserAsync(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public ClientWPF.ServiceAirlines.City[] GetAllCities() {
            return base.Channel.GetAllCities();
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.City[]> GetAllCitiesAsync() {
            return base.Channel.GetAllCitiesAsync();
        }
        
        public ClientWPF.ServiceAirlines.Flight[] GetFlights(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.GetFlights(flight);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Flight[]> GetFlightsAsync(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.GetFlightsAsync(flight);
        }
        
        public ClientWPF.ServiceAirlines.Place[] GetPlaces(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.GetPlaces(flight);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Place[]> GetPlacesAsync(ClientWPF.ServiceAirlines.Flight flight) {
            return base.Channel.GetPlacesAsync(flight);
        }
        
        public ClientWPF.ServiceAirlines.Order[] GetUserReservation(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.GetUserReservation(user);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Order[]> GetUserReservationAsync(ClientWPF.ServiceAirlines.User user) {
            return base.Channel.GetUserReservationAsync(user);
        }
        
        public ClientWPF.ServiceAirlines.Order[] CancelReservation(ClientWPF.ServiceAirlines.Order order) {
            return base.Channel.CancelReservation(order);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Order[]> CancelReservationAsync(ClientWPF.ServiceAirlines.Order order) {
            return base.Channel.CancelReservationAsync(order);
        }
        
        public System.ValueTuple<ClientWPF.ServiceAirlines.Place[], string> ReservePlace(ClientWPF.ServiceAirlines.User user, ClientWPF.ServiceAirlines.Place place) {
            return base.Channel.ReservePlace(user, place);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<ClientWPF.ServiceAirlines.Place[], string>> ReservePlaceAsync(ClientWPF.ServiceAirlines.User user, ClientWPF.ServiceAirlines.Place place) {
            return base.Channel.ReservePlaceAsync(user, place);
        }
        
        public ClientWPF.ServiceAirlines.Order[] BuyTicket(ClientWPF.ServiceAirlines.Order order) {
            return base.Channel.BuyTicket(order);
        }
        
        public System.Threading.Tasks.Task<ClientWPF.ServiceAirlines.Order[]> BuyTicketAsync(ClientWPF.ServiceAirlines.Order order) {
            return base.Channel.BuyTicketAsync(order);
        }
    }
}
